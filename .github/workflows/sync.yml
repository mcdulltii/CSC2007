name: Sync Repos

on:
  push:
    branches:
      - master

jobs:
  test-feature:
    runs-on: ubuntu-latest
    outputs:
      test-passed: ${{ steps.test.outputs.test-passed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.0
      - name: Set up JDK 11
        uses: actions/setup-java@v3.13.0
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Run gradle wrapper
        run: gradle wrapper
      - name: Grant execute permissions for gradlew
        run: chmod +x ./gradlew
      - name: Run Tests with Gradle
        id: test
        run: |
          ./gradlew test
          echo "::set-output name=test-passed::true"
      - name: Test Result
        if: steps.test.outputs.test-passed == 'true'
        run: echo "Unit tests passed!"

  check-differences:
    runs-on: ubuntu-latest
    needs: test-feature

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.repository.full_name }}

      - name: Checkout destination repository
        uses: actions/checkout@v2
        with:
          repository: ${{ env.ORG_NAME }}/inf2007-team25-2024
          ref: main

      - name: Check for differences
        id: check-differences
        run: |
          git diff --name-only ${{ github.sha }} HEAD > files_changed.txt || echo "No files changed"
          if [ -s files_changed.txt ]; then
            echo "There are new files, trigger sync job"
            echo "::set-output name=files-changed::true"
          else
            echo "No new files, skipping sync job"
            echo "::set-output name=files-changed::false"
          fi

  sync:
    runs-on: ubuntu-latest
    needs: [test-feature, check-differences]
    if: needs.test-feature.outputs.test-passed == 'true' && needs.check-differences.outputs.files-changed == 'true'

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v2

      - name: Push to destination repository
        run: |
          git config --global user.email "mcdulltii@gmail.com"
          git config --global user.name "mcdulltii"
          git clone https://${{ secrets.PAT }}@github.com/inf2007/inf2007-team25-2024.git
          git clone https://${{ secrets.PAT }}@github.com/${{ env.ORG_NAME }}/${{ env.ORIGINAL_REPO_NAME }}.git
          cd inf2007-team25-2024
          cp ../${{ env.ORIGINAL_REPO_NAME }}/* . -rf
          git add .
          git commit -m "Sync from source"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          ORIGINAL_REPO_NAME: ${{ github.event.repository.name }}
          ORG_NAME: mcdulltii
